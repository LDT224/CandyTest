

/**
 * Mocked data for spin data
 * {
 *   matrix: string[],
 *   combine: string[], // format: [symbol];[pos1, pos2, ...];[score]
 * }
 */
const spinDataMockupDemo = [
    {"matrix":["3","3","3","3","5","1","5","2","5","5","1","8","2","2","5","8","2","2","3","2","1","3","5","8","4"],"combine":["3;0,1,2,3;2.00","5;4,9,8,14;7.50","2;7,12,13,17,16;2.00"]},
    {"matrix":["5","7","6","1","5","1","2","1","1","5","4","2","5","1","8","7","2","8","3","2","1","3","5","8","4"],"combine":["1;3,8,7,13;1.00"]},
    {"matrix":["6","5","7","6","5","3","1","1","2","5","K","4","2","5","8","7","2","8","3","2","1","3","5","8","4"]},
    {"matrix":["6","5","7","6","5","6","2","6","K","5","5","8","K","5","8","1","8","2","7","8","2","8","8","5","8"],"combine":["6;3,8,7,12;10.00","5;4,9,8,13,12;12.50","8;11,12,16,21,22;10.00"]},
    {"matrix":["1","K","6","5","7","K","6","1","6","2","8","6","2","5","8","4","1","2","7","8","8","K","2","5","8"],"combine":["6;2,1,6,5,11;15.00","2;12,17,22,21;1.50"]},
    {"matrix":["8","3","1","5","7","3","2","1","6","2","5","1","8","5","8","7","4","1","7","8","2","6","8","5","8"]},
    {"matrix":["8","3","1","5","7","3","K","1","K","2","5","1","8","5","8","7","K","1","K","8","2","6","8","5","8"],"combine":["8;14,19,18,24;5.00","5;3,8,13,18,23;12.50","1;2,7,6,8,11,16,17,18;3.00"]},
    {"matrix":["1","8","8","3","7","5","2","1","3","2","2","6","4","5","8","4","3","4","5","7","3","1","2","6","8"]},
    {"matrix":["6","8","6","3","6","5","6","1","6","2","6","6","6","5","6","4","6","4","6","7","6","1","6","6","6"],"combine":["6;6,11,10,12,16;15.00","6;18,23,22,24;10.00"]},
    {"matrix":["6","8","6","3","6","2","5","1","6","2","8","8","4","5","6","2","6","4","4","7","7","8","4","6","1"],"combine":["4;12,17,18,22;2.50"]},
    {"matrix":["6","8","6","3","6","2","5","1","6","2","3","8","8","5","6","8","7","2","6","7","1","7","8","6","1"]},
    {"matrix":["6","8","6","8","6","5","5","8","6","5","8","8","8","5","6","8","7","5","6","7","8","7","8","6","8"],"combine":["8;7,12,11,10,15,20;15.00"]},
    {"matrix":["6","8","6","8","6","5","5","5","6","5","8","8","8","5","6","8","7","5","6","7","8","7","8","6","8"],"combine":["8;10,11,15,12,20;10.00"]},
    {"matrix":["6","8","6","8","6","5","5","5","6","5","5","6","7","5","6","8","7","5","6","7","8","7","8","6","8"],"combine":["5;5,6,10,7;7.50"]},
    {"matrix":["6","8","6","8","6","5","8","5","6","5","8","6","7","5","6","8","7","5","6","7","8","7","8","6","8"]},
    
];

/**
 * A fake Server class that simulating Client-Server communication for mini-game
 */
export default class Server {

    private _mockDataIndex = 0;
    private _dataRespondCallbacks: Function[] = [];

    public registerDataRespondEvent (callback: Function): void {
        this._dataRespondCallbacks.push(callback);
    }

    public requestSpinData (): void {

        const delay = this._randomRange(100, 1500) + ((Math.random() > 0.8) ? 2000 : 0);
        window.setTimeout(() => {

            //
            //Write your own logic generating spin data here
            //

            // Mocked data demo
            const data =  spinDataMockupDemo[this._mockDataIndex];
            this._mockDataIndex = (this._mockDataIndex + 1) % spinDataMockupDemo.length;

            this._dataRespondCallbacks.forEach((callback) => {
                callback(data);
            });


        }, delay);
    }

    private _randomRange (min: number, max: number, int: boolean = false) {

        const delta = max - min;
        const rnd = Math.random();
        let result = min + rnd * delta;

        if (int) {
            result = Math.round(result);
        }

        return result;
    }
}